# -*- coding: utf-8 -*-
"""Logistic_Regression_Breast_Cancer .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11G327kAxfXaGs398TvUFZ6YF7lENM0R2
"""

#Importing the libraries

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from google.colab import drive
from sklearn.linear_model import LogisticRegression

drive.mount('/content/drive')

#Reading data

df=pd.read_csv("/content/drive/MyDrive/Data/breast-cancer-wisconsin (2).data", header=None)
print(f"Read in {len(df)} rows")
df.head()

#Replacing '?' in data

df.replace("?", 5000, inplace=True)

df.drop([0], 1, inplace=True)
df.head()

#Defining X and y

X = np.array(df.drop([10], 1))
y = np.array(df[10])

#performing tain test split

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)

print(X_train)

print(y_train)

#Putting standard scaler

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

#Implementing logistic regression

classifier = LogisticRegression(random_state = 0)
classifier.fit(X_train, y_train)

#specifying y_pred

y_pred = classifier.predict(X_test)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

#Printing confusion matrix and accuracy

from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test, y_pred)
print(cm)
accuracy_score(y_test, y_pred)

# Create a Pickle file  
import pickle
pickle_out = open("classifier.pkl","wb")
pickle.dump(classifier, pickle_out)
pickle_out.close()